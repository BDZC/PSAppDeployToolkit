"use strict";(self.webpackChunkpsadt_docs=self.webpackChunkpsadt_docs||[]).push([[1738],{8047:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>r,toc:()=>c});var i=l(1527),t=l(6224);const s={id:"Write-Log",title:"Write-Log",description:'Help page for the "Write-Log" command',keywords:["PSAppDeployToolkit","PowerShell","Help","Documentation"],hide_title:!1,hide_table_of_contents:!1,custom_edit_url:null},a=void 0,r={id:"reference/functions/Write-Log",title:"Write-Log",description:'Help page for the "Write-Log" command',source:"@site/docs/reference/functions/Write-Log.mdx",sourceDirName:"reference/functions",slug:"/reference/functions/Write-Log",permalink:"/docs/reference/functions/Write-Log",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"Write-Log",title:"Write-Log",description:'Help page for the "Write-Log" command',keywords:["PSAppDeployToolkit","PowerShell","Help","Documentation"],hide_title:!1,hide_table_of_contents:!1,custom_edit_url:null},sidebar:"reference",previous:{title:"Write-FunctionHeaderOrFooter",permalink:"/docs/reference/functions/Write-FunctionHeaderOrFooter"}},o={},c=[{value:"SYNOPSIS",id:"synopsis",level:2},{value:"SYNTAX",id:"syntax",level:2},{value:"DESCRIPTION",id:"description",level:2},{value:"EXAMPLES",id:"examples",level:2},{value:"EXAMPLE 1",id:"example-1",level:3},{value:"EXAMPLE 2",id:"example-2",level:3},{value:"EXAMPLE 3",id:"example-3",level:3},{value:"PARAMETERS",id:"parameters",level:2},{value:"-Message",id:"-message",level:3},{value:"-Severity",id:"-severity",level:3},{value:"-Source",id:"-source",level:3},{value:"-ScriptSection",id:"-scriptsection",level:3},{value:"-LogType",id:"-logtype",level:3},{value:"-LogFileDirectory",id:"-logfiledirectory",level:3},{value:"-LogFileName",id:"-logfilename",level:3},{value:"-MaxLogFileSizeMB",id:"-maxlogfilesizemb",level:3},{value:"-WriteHost",id:"-writehost",level:3},{value:"-ContinueOnError",id:"-continueonerror",level:3},{value:"-PassThru",id:"-passthru",level:3},{value:"-DebugMessage",id:"-debugmessage",level:3},{value:"-LogDebugMessage",id:"-logdebugmessage",level:3},{value:"CommonParameters",id:"commonparameters",level:3},{value:"INPUTS",id:"inputs",level:2},{value:"System.String",id:"systemstring",level:3},{value:"The message to write to the log file or output to the console.",id:"the-message-to-write-to-the-log-file-or-output-to-the-console",level:3},{value:"OUTPUTS",id:"outputs",level:2},{value:"None",id:"none",level:3},{value:"This function does not generate any output.",id:"this-function-does-not-generate-any-output",level:3},{value:"NOTES",id:"notes",level:2},{value:"RELATED LINKS",id:"related-links",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"synopsis",children:"SYNOPSIS"}),"\n",(0,i.jsx)(n.p,{children:"Write messages to a log file in CMTrace.exe compatible format or Legacy text file format."}),"\n",(0,i.jsx)(n.h2,{id:"syntax",children:"SYNTAX"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-powershell",children:"Write-Log [-Message] <String[]> [[-Severity] <Int16>] [[-Source] <String>] [[-ScriptSection] <String>]\n [[-LogType] <String>] [[-LogFileDirectory] <String>] [[-LogFileName] <String>] [[-MaxLogFileSizeMB] <Decimal>]\n [[-WriteHost] <Boolean>] [[-ContinueOnError] <Boolean>] [-PassThru] [-DebugMessage]\n [[-LogDebugMessage] <Boolean>] [<CommonParameters>]\n"})}),"\n",(0,i.jsx)(n.h2,{id:"description",children:"DESCRIPTION"}),"\n",(0,i.jsx)(n.p,{children:"Write messages to a log file in CMTrace.exe compatible format or Legacy text file format and optionally display in the console."}),"\n",(0,i.jsx)(n.h2,{id:"examples",children:"EXAMPLES"}),"\n",(0,i.jsx)(n.h3,{id:"example-1",children:"EXAMPLE 1"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-powershell",children:"Write-Log -Message \"Installing patch MS15-031\" -Source 'Add-Patch' -LogType 'CMTrace'\n"})}),"\n",(0,i.jsx)(n.h3,{id:"example-2",children:"EXAMPLE 2"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-powershell",children:"Write-Log -Message \"Script is running on Windows 8\" -Source 'Test-ValidOS' -LogType 'Legacy'\n"})}),"\n",(0,i.jsx)(n.h3,{id:"example-3",children:"EXAMPLE 3"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-powershell",children:'Write-Log -Message "Log only message" -WriteHost $false\n'})}),"\n",(0,i.jsx)(n.h2,{id:"parameters",children:"PARAMETERS"}),"\n",(0,i.jsx)(n.h3,{id:"-message",children:"-Message"}),"\n",(0,i.jsx)(n.p,{children:"The message to write to the log file or output to the console."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"Type: String[]\nParameter Sets: (All)\nAliases: Text\n\nRequired: True\nPosition: 1\nDefault value: None\nAccept pipeline input: True (ByPropertyName, ByValue)\nAccept wildcard characters: False\n"})}),"\n",(0,i.jsx)(n.h3,{id:"-severity",children:"-Severity"}),"\n",(0,i.jsx)(n.p,{children:"Defines message type.\nWhen writing to console or CMTrace.exe log format, it allows highlighting of message type.\nOptions: 1 = Information (default), 2 = Warning (highlighted in yellow), 3 = Error (highlighted in red)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"Type: Int16\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 2\nDefault value: 1\nAccept pipeline input: False\nAccept wildcard characters: False\n"})}),"\n",(0,i.jsx)(n.h3,{id:"-source",children:"-Source"}),"\n",(0,i.jsx)(n.p,{children:"The source of the message being logged."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 3\n        Default value: $([String]$parentFunctionName = [IO.Path]::GetFileNameWithoutExtension((Get-Variable -Name 'MyInvocation' -Scope 1 -ErrorAction 'SilentlyContinue').Value.MyCommand.Name); If ($parentFunctionName) {\n                $parentFunctionName\n            }\n            Else {\n                'Unknown'\n            })\nAccept pipeline input: False\nAccept wildcard characters: False\n"})}),"\n",(0,i.jsx)(n.h3,{id:"-scriptsection",children:"-ScriptSection"}),"\n",(0,i.jsxs)(n.p,{children:["The heading for the portion of the script that is being executed.\nDefault is: $script",":installPhase","."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 4\nDefault value: $script:installPhase\nAccept pipeline input: False\nAccept wildcard characters: False\n"})}),"\n",(0,i.jsx)(n.h3,{id:"-logtype",children:"-LogType"}),"\n",(0,i.jsx)(n.p,{children:"Choose whether to write a CMTrace.exe compatible log file or a Legacy text log file."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 5\nDefault value: $configToolkitLogStyle\nAccept pipeline input: False\nAccept wildcard characters: False\n"})}),"\n",(0,i.jsx)(n.h3,{id:"-logfiledirectory",children:"-LogFileDirectory"}),"\n",(0,i.jsx)(n.p,{children:"Set the directory where the log file will be saved."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 6\n        Default value: $(If ($configToolkitCompressLogs) {\n                $logTempFolder\n            }\n            Else {\n                $configToolkitLogDir\n            })\nAccept pipeline input: False\nAccept wildcard characters: False\n"})}),"\n",(0,i.jsx)(n.h3,{id:"-logfilename",children:"-LogFileName"}),"\n",(0,i.jsx)(n.p,{children:"Set the name of the log file."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 7\nDefault value: $logName\nAccept pipeline input: False\nAccept wildcard characters: False\n"})}),"\n",(0,i.jsx)(n.h3,{id:"-maxlogfilesizemb",children:"-MaxLogFileSizeMB"}),"\n",(0,i.jsx)(n.p,{children:"Maximum file size limit for log file in megabytes (MB).\nDefault is 10 MB."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"Type: Decimal\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 8\nDefault value: $configToolkitLogMaxSize\nAccept pipeline input: False\nAccept wildcard characters: False\n"})}),"\n",(0,i.jsx)(n.h3,{id:"-writehost",children:"-WriteHost"}),"\n",(0,i.jsx)(n.p,{children:"Write the log message to the console."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"Type: Boolean\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 9\nDefault value: $configToolkitLogWriteToHost\nAccept pipeline input: False\nAccept wildcard characters: False\n"})}),"\n",(0,i.jsx)(n.h3,{id:"-continueonerror",children:"-ContinueOnError"}),"\n",(0,i.jsx)(n.p,{children:"Suppress writing log message to console on failure to write message to log file.\nDefault is: $true."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"Type: Boolean\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 10\nDefault value: True\nAccept pipeline input: False\nAccept wildcard characters: False\n"})}),"\n",(0,i.jsx)(n.h3,{id:"-passthru",children:"-PassThru"}),"\n",(0,i.jsx)(n.p,{children:"Return the message that was passed to the function"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"Type: SwitchParameter\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 11\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n"})}),"\n",(0,i.jsx)(n.h3,{id:"-debugmessage",children:"-DebugMessage"}),"\n",(0,i.jsx)(n.p,{children:"Specifies that the message is a debug message.\nDebug messages only get logged if -LogDebugMessage is set to $true."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"Type: SwitchParameter\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 12\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n"})}),"\n",(0,i.jsx)(n.h3,{id:"-logdebugmessage",children:"-LogDebugMessage"}),"\n",(0,i.jsx)(n.p,{children:"Debug messages only get logged if this parameter is set to $true in the config XML file."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"Type: Boolean\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 13\nDefault value: $configToolkitLogDebugMessage\nAccept pipeline input: False\nAccept wildcard characters: False\n"})}),"\n",(0,i.jsx)(n.h3,{id:"commonparameters",children:"CommonParameters"}),"\n",(0,i.jsxs)(n.p,{children:["This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see ",(0,i.jsx)(n.a,{href:"http://go.microsoft.com/fwlink/?LinkID=113216",children:"about_CommonParameters"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"inputs",children:"INPUTS"}),"\n",(0,i.jsx)(n.h3,{id:"systemstring",children:"System.String"}),"\n",(0,i.jsx)(n.h3,{id:"the-message-to-write-to-the-log-file-or-output-to-the-console",children:"The message to write to the log file or output to the console."}),"\n",(0,i.jsx)(n.h2,{id:"outputs",children:"OUTPUTS"}),"\n",(0,i.jsx)(n.h3,{id:"none",children:"None"}),"\n",(0,i.jsx)(n.h3,{id:"this-function-does-not-generate-any-output",children:"This function does not generate any output."}),"\n",(0,i.jsx)(n.h2,{id:"notes",children:"NOTES"}),"\n",(0,i.jsx)(n.h2,{id:"related-links",children:"RELATED LINKS"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://psappdeploytoolkit.com",children:"https://psappdeploytoolkit.com"})})]})}function p(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},6224:(e,n,l)=>{l.d(n,{Z:()=>r,a:()=>a});var i=l(959);const t={},s=i.createContext(t);function a(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);